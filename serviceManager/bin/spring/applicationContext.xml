<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-4.3.xsd ">

    <!--扫描service-->
    <context:component-scan base-package="com.fahai.cc.service.*"></context:component-scan>
    <!-- 加载jdbc-->
   <bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
				<value>classpath:redis.properties</value>
			</list>
		</property>
	</bean>

    <!--配置数据源，采用阿里的druid作为数据库连接池-->
    <bean id="dataSourceMaster" class="com.mchange.v2.c3p0.ComboPooledDataSource ">
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<property name="jdbcUrl"
			value="jdbc:mysql://${jdbc.host}:${jdbc.port}/${jdbc.database}?useUnicode=true&amp;characterEncoding=utf8&amp;allowMultiQueries=true" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="acquireIncrement" value="1" />
		<property name="initialPoolSize" value="5" />
		<property name="maxPoolSize" value="20" />
		<property name="minPoolSize" value="5" />
		<property name="maxStatements" value="100" />
		
		<property name="idleConnectionTestPeriod" value="60" />
		<property name="acquireRetryAttempts" value="30" />
		<property name="breakAfterAcquireFailure" value="true" />
		<property name="testConnectionOnCheckout" value="false" />
	</bean>
	
	<bean id="dataSourceSalve" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<property name="jdbcUrl"
			value="jdbc:mysql://${jdbc.slave.host}:${jdbc.slave.port}/${jdbc.slave.database}?useUnicode=true&amp;characterEncoding=utf8&amp;allowMultiQueries=true" />
		<property name="user" value="${jdbc.slave.username}" />
		<property name="password" value="${jdbc.slave.password}" />
		<property name="acquireIncrement" value="1" />
		<property name="initialPoolSize" value="5" />
		<property name="maxPoolSize" value="20" />
		<property name="minPoolSize" value="5" />
		<property name="maxStatements" value="100" />
		
		<property name="idleConnectionTestPeriod" value="60" />
		<property name="acquireRetryAttempts" value="30" />
		<property name="breakAfterAcquireFailure" value="true" />
		<property name="testConnectionOnCheckout" value="false" />
	</bean>
	

	<bean id="dataSource"  class="com.fahai.cc.service.core.DynamicDataSource">
        <property name="writeDataSource"  ref="dataSourceMaster"></property>
        <property name="readDataSource" ref="dataSourceSalve"></property>
    </bean>
    
    <bean id="transactionManager" class="com.fahai.cc.service.core.DynamicDataSourceTransactionManager">
              <property name="dataSource" ref="dataSource"/>
    </bean>
       
    <!--配置sessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--注入数据库连接池-->
        <property name="dataSource" ref="dataSource"/>
        <!-- 加载mybatis的全局配置文件 -->
        <property name="configLocation" value="classpath:sqlMapConfig.xml"/>
        
        <property name="plugins">
            <array>
                   <bean class="com.fahai.cc.service.core.DynamicPlugin" />
            </array>
        </property>
    </bean>
    
    <!-- mapper扫描器 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 扫描包的路径 -->
        <property name="basePackage" value="com.fahai.cc.service.*.mapper"></property>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>
    <!--对mybatis操作数据库事务控制，spring使用jdbc的事务控制类-->
   <!--  
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>-->

	 <tx:annotation-driven transaction-manager="transactionManager"/> 
	<!-- Redis 连接池 -->
	<bean id="jedisPool" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxTotal" value="${redis.pool.maxActive}" />
		<property name="maxIdle" value="${redis.pool.maxIdle}" />
		<property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />
		<property name="testOnReturn" value="${redis.pool.testOnReturn}" />
		<property name="maxWaitMillis" value="${redis.pool.maxWait}" />
	</bean>

	<!-- Redis 连接工厂 -->
	<bean id="connectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="${redis.host}" />
		<property name="port" value="${redis.port}" />
		<property name="password" value="${redis.password}" />
		<property name="timeout" value="${redis.timeout}" />
		<property name="poolConfig" ref="jedisPool" />
	</bean>
	<!-- redis 操作对象 -->
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">  
       <property name="connectionFactory" ref="connectionFactory" />  
       <property name="keySerializer">  
           <bean  
               class="org.springframework.data.redis.serializer.StringRedisSerializer" />  
       </property>  
       <property name="valueSerializer">  
           <bean  
               class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />  
       </property>  
   </bean>
   <bean id="customeSession" class="com.fahai.cc.service.util.CustomeSession">
   		<property name="redisTemplate" ref="redisTemplate" /> 
   </bean>
    <!-- 通知 -->
    <!-- 
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            
            <tx:method name="save*" propagation="REQUIRED"/>
            <tx:method name="delete*" propagation="REQUIRED"/>
            <tx:method name="save*" propagation="REQUIRED"/>
            <tx:method name="insert*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="find*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="get*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="select*" propagation="SUPPORTS" read-only="true"/>
        </tx:attributes>
    </tx:advice>
    <aop:config>
        <aop:advisor advice-ref="txAdvice" pointcut="execution(* com.fahai.cc.service.*.service.impl.*.*(..))"/>
    </aop:config>
     -->
    
    <!-- javaMail的配置 -->
    <!-- 创建发送器 -->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="defaultEncoding" value="UTF-8"></property>
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">true</prop>
			</props>
		</property>
	</bean>
    <bean id="setting"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean" >
		<property name="locations">
			<list>
				<value>classpath:mail.properties</value>
			</list>
		</property>
		<!-- 设置编码格式 -->
		<property name="fileEncoding" value="UTF-8"></property>
	</bean>
	
	<!-- 	任务类描述 -->
	<bean id="checkInterface" 
	class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="dashboardController"></property>
		<property name="targetMethod" value="checkInterfaceHeartBeat"></property>
	</bean>
	<!-- 	触发器  -->
	<bean id="myTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="checkInterface"></property>
	<!-- 		表达式 -->
		<property name="cronExpression" value="0 */5 * * * ? *"></property>
	</bean>
	<!-- 	总管理容器  lazy-init="true"-->
	<bean id="startQuartz"   class="org.springframework.scheduling.quartz.SchedulerFactoryBean" >
		<property name="triggers">
			<list>
				<ref bean="myTrigger"/>
			</list>
		</property>
	</bean>	
</beans>